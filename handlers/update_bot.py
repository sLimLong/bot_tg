import os
import subprocess
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from config import ALLOWED_ADMINS

BOT_DIR = "/root/bot_tg"
SERVICE_NAME = "bot_tg.service"

async def update_bot_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ALLOWED_ADMINS:
        await update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    await update.message.reply_text("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å...")

    try:
        os.chdir(BOT_DIR)

        subprocess.check_call(["git", "pull"])
        subprocess.check_call(["pip3", "install", "-r", "requirements.txt"])
        subprocess.run(["systemctl", "restart", SERVICE_NAME])

        await update.message.reply_text("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ.")

    except subprocess.CalledProcessError:
        await update.message.reply_text("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å. –ü—Ä–æ–≤–µ—Ä—å –∂—É—Ä–Ω–∞–ª –æ—à–∏–±–æ–∫.")

    except Exception as e:
        await update.message.reply_text(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

def get_handler():
    return CommandHandler("update_bot", update_bot_handler)
