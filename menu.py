from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
from players import online_command  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–Ω–ª–∞–π–Ω-–∏–≥—Ä–æ–∫–æ–≤
from status import status_menu      # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
from top_voters import top_voters_command  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –≥–æ–ª–æ—Å—É—é—â–∏—Ö
from top_playerstats import topstats_command  # —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤

# üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üñ•Ô∏è –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞", callback_data="info")],
        [InlineKeyboardButton("üìä –¢–æ–ø –≥–æ–ª–æ—Å—É—é—â–∏—Ö", callback_data="topvoters")],
        [InlineKeyboardButton("üß† –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤", callback_data="top_pl")],
        [InlineKeyboardButton("üë• –û–Ω–ª–∞–π–Ω-–∏–≥—Ä–æ–∫–∏", callback_data="players")],
        [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", callback_data="refresh_menu")]
    ]
    await update.message.reply_text("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=InlineKeyboardMarkup(keyboard))

# üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def handle_menu_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    action = query.data

    if action == "refresh_menu":
        await query.edit_message_text("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é...")
        await main_menu(update, context)

    elif action == "info":
        await status_menu(update, context)

    elif action == "topvoters":
        await top_voters_command(update, context)

    elif action == "top_pl":
        await topstats_command(update, context)

    elif action == "players":
        await online_command(update, context)

    else:
        await query.edit_message_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

# üì¶ –≠–∫—Å–ø–æ—Ä—Ç —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
menu_handlers = [
    CommandHandler("menu", main_menu),
    CallbackQueryHandler(handle_menu_action, pattern=r"^(info|topvoters|top_pl|players|refresh_menu)$")
]
