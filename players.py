# players.py

import requests, logging
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from config import SERVERS

# üë• –ö–æ–º–∞–Ω–¥–∞ /players ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
async def players(update: Update, context: ContextTypes.DEFAULT_TYPE):
    messages = []

    for server in SERVERS:
        try:
            response = requests.get(
                f"{server['url']}/api/getplayersonline",
                auth=server['auth'],
                timeout=5
            )
            players = response.json()

            if not isinstance(players, list) or not players:
                messages.append(f"üñ•Ô∏è {server['name']} ‚Äî –Ω–∏–∫—Ç–æ –Ω–µ –æ–Ω–ª–∞–π–Ω")
                continue

            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏
            players.sort(key=lambda p: p.get("name", "").lower())

            lines = [f"‚Ä¢ {p.get('name', '?')}" for p in players]
            messages.append(f"üñ•Ô∏è {server['name']} ‚Äî –æ–Ω–ª–∞–π–Ω ({len(players)}):\n" + "\n".join(lines))

        except Exception as e:
            logging.warning(f"[players] {server['name']} ‚Äî –æ—à–∏–±–∫–∞: {e}")
            messages.append(f"‚ùå {server['name']} ‚Äî –æ—à–∏–±–∫–∞: {e}")

    await update.message.reply_text("\n\n".join(messages), parse_mode="Markdown")

# üì¶ –≠–∫—Å–ø–æ—Ä—Ç —Ö–µ–Ω–¥–ª–µ—Ä–∞
players_handler = CommandHandler("players", players)
