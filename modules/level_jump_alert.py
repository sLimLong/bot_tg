import requests
import time
import re
import threading
from config import TOKEN, GROUP_CHAT_ID, CHANNEL_CHAT_ID  # CHANNEL_CHAT_ID ‚Äî —ç—Ç–æ thread_id
from config import SERVERS

# üîç –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –ø—Ä—ã–∂–∫–∞ —É—Ä–æ–≤–Ω—è
LEVEL_JUMP_REGEX = re.compile(
    r"

\[CSMM_Patrons\]

 WARNING: (.+?) \(Steam_(\d+)\) jumped up more than one level \((\d+) -> (\d+)\)"
)

# üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ –≤ Telegram
def send_level_jump_alert(msg, server_name):
    match = LEVEL_JUMP_REGEX.search(msg)
    if not match:
        return

    player_name, steam_id, old_level, new_level = match.groups()

    alert = (
        f"üìà –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä—ã–∂–æ–∫ —É—Ä–æ–≤–Ω—è!\n"
        f"üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: {server_name}\n"
        f"üë§ –ò–≥—Ä–æ–∫: {player_name}\n"
        f"üéÆ SteamID: {steam_id}\n"
        f"üìä –£—Ä–æ–≤–µ–Ω—å: {old_level} ‚Üí {new_level}"
    )

    recipients = [
        {"chat_id": GROUP_CHAT_ID},
        {"chat_id": GROUP_CHAT_ID, "message_thread_id": CHANNEL_CHAT_ID}
    ]

    for recipient in recipients:
        try:
            payload = {"text": alert, **recipient}
            requests.post(
                f"https://api.telegram.org/bot{TOKEN}/sendMessage",
                json=payload,
                timeout=5
            ).raise_for_status()
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {recipient}: {e}")

# üîÑ –°–ª—É—à–∞—Ç–µ–ª—å –ª–æ–≥–æ–≤
def run_level_jump_listener(server):
    print(f"üì° –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä—ã–∂–∫–æ–≤ —É—Ä–æ–≤–Ω—è –¥–ª—è {server['name']}")
    last_line = None

    headers = {
        "X-SDTD-API-TOKENNAME": server["auth"][0],
        "X-SDTD-API-SECRET": server["auth"][1],
        "User-Agent": "Mozilla/5.0"
    }

    while True:
        params = {"count": 50}
        if last_line is not None:
            params["firstLine"] = last_line + 1

        try:
            response = requests.get(f"{server['url']}/api/log", params=params, headers=headers, timeout=5)
            response.raise_for_status()
            entries = response.json().get("data", {}).get("entries", [])
        except Exception as e:
            print(f"‚ùå [{server['name']}] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
            time.sleep(5)
            continue

        for entry in entries:
            last_line = entry.get("id", last_line)
            msg = entry.get("msg", "")

            if "[CSMM_Patrons] WARNING:" in msg and "jumped up more than one level" in msg:
                send_level_jump_alert(msg, server["name"])

        time.sleep(5)

# üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
def start_level_jump_alerts():
    for server in SERVERS:
        threading.Thread(target=run_level_jump_listener, args=(server,), daemon=True).start()
