import requests
import time
import re
import threading
from config import TOKEN, GROUP_CHAT_ID, CHANNEL_CHAT_ID, SERVERS

CHEAT_KEYWORDS = ["—á–∏—Ç", "—á–∏—Ç–∞–∫", "—á–∏—Ç–µ—Ä", "—á–∏—Ç–µ—Ä—ã", "—á–∏—Ç–∞–º–∏", "—á–∏—Ç–æ–≤"]

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
def contains_cheat_word(msg):
    return any(word in msg.lower() for word in CHEAT_KEYWORDS)

# üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ –≤ Telegram (—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø—É –∏ –∫–∞–Ω–∞–ª)
def send_cheater_alert(msg, server_name):
    alert = (
        f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ–º –Ω–∞ —á–∏—Ç\n"
        f"üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: {server_name}\n"
        f"üí¨ –¢–µ–∫—Å—Ç: {msg}"
    )

    recipients = [GROUP_CHAT_ID, CHANNEL_CHAT_ID]

    for chat_id in recipients:
        try:
            requests.post(
                f"https://api.telegram.org/bot{TOKEN}/sendMessage",
                json={"chat_id": chat_id, "text": alert},
                timeout=5
            ).raise_for_status()
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ {chat_id}: {e}")

# üîÑ –°–ª—É—à–∞—Ç–µ–ª—å –ª–æ–≥–æ–≤
def run_cheater_listener(server):
    print(f"üõ°Ô∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ '—á–∏—Ç' –¥–ª—è {server['name']}")
    last_line = None

    headers = {
        "X-SDTD-API-TOKENNAME": server["auth"][0],
        "X-SDTD-API-SECRET": server["auth"][1],
        "User-Agent": "Mozilla/5.0"
    }

    while True:
        params = {"count": 50}
        if last_line is not None:
            params["firstLine"] = last_line + 1

        try:
            response = requests.get(f"{server['url']}/api/log", params=params, headers=headers, timeout=5)
            response.raise_for_status()
            entries = response.json().get("data", {}).get("entries", [])
        except Exception as e:
            print(f"‚ùå [{server['name']}] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
            time.sleep(5)
            continue

for entry in entries:
    last_line = entry.get("id", last_line)
    msg = entry.get("msg", "")

    # üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Steam
    if "Chat (from 'Steam_" not in msg:
        continue

    # üö´ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–æ–¥–∞–º–∏
    if "Chat handled by mod" in msg:
        continue

    if contains_cheat_word(msg):
        send_cheater_alert(msg, server["name"])


        time.sleep(5)

# üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
def start_cheater_alerts():
    for server in SERVERS:
        threading.Thread(target=run_cheater_listener, args=(server,), daemon=True).start()
