import os
import subprocess
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from config import ALLOWED_ADMINS

BOT_DIR = "/root/bot_tg"
SERVICE_NAME = "bot_tg.service"

async def update_bot_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ALLOWED_ADMINS:
        await update.message.reply_text("‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    await update.message.reply_text("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å...")

    try:
        os.chdir(BOT_DIR)

        git_result = subprocess.check_output(["git", "pull"], stderr=subprocess.STDOUT).decode()
        pip_result = subprocess.check_output(["pip3", "install", "-r", "requirements.txt"], stderr=subprocess.STDOUT).decode()

        await update.message.reply_text(
            "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n\nüì¶ Git:\n" + git_result +
            "\nüêç Pip:\n" + pip_result +
            "\n\nüîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é—Å—å..."
        )

        subprocess.run(["systemctl", "restart", SERVICE_NAME])

    except subprocess.CalledProcessError as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞:\n{e.output.decode()}")

    except Exception as e:
        await update.message.reply_text(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:\n{str(e)}")

def get_handler():
    return CommandHandler("update_bot", update_bot_handler)
